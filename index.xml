<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Taction Blog</title><link>https://taction.top/</link><description>Recent content on Taction Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Sep 2023 20:06:20 +0800</lastBuildDate><atom:link href="https://taction.top/index.xml" rel="self" type="application/rss+xml"/><item><title>在K8s中调度Dapr Wasm程序</title><link>https://taction.top/post/run-dapr-wasm-in-k8s/</link><pubDate>Mon, 04 Sep 2023 20:06:20 +0800</pubDate><guid>https://taction.top/post/run-dapr-wasm-in-k8s/</guid><description>用go语言实现一个containerd-shim，支持在k8s中调度wasm程序。通过为shim添加dapr 组件的host abi支持，使被调</description></item><item><title>在K8s中运行Wasm container</title><link>https://taction.top/post/run-wasm-in-k8s/</link><pubDate>Sun, 03 Sep 2023 17:07:56 +0800</pubDate><guid>https://taction.top/post/run-wasm-in-k8s/</guid><description>先决条件 Intall k3d wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash kubectl curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl 启动k3d 在这个镜像中我内置添加了containerd-shim-dapr-v1二进制，</description></item><item><title>Wit in Go Practice</title><link>https://taction.top/post/wit-in-go-practice/</link><pubDate>Fri, 01 Sep 2023 20:11:19 +0800</pubDate><guid>https://taction.top/post/wit-in-go-practice/</guid><description>TL;DR 本文以实际案例介绍如何借助WebAssembly组件模型来自定义Wasm及开发对应的go语言SDK。 一 概述 Dapr是一个分布式运行时，那么</description></item><item><title>WebAssembly Component Model介绍及如何与go语言结合</title><link>https://taction.top/post/wit-in-go/</link><pubDate>Mon, 21 Aug 2023 20:05:23 +0800</pubDate><guid>https://taction.top/post/wit-in-go/</guid><description>TL;DR 本文介绍使用WebAssembly Component Model定义的ABI，如何实现其go语言的sdk，包括guest和host的sdk。 基本介绍 WebAssembly 组件模</description></item><item><title>Dapr Http Wasm Middleware</title><link>https://taction.top/2023/06/25/2023-06-25-http-wasm-middleware.md/</link><pubDate>Sun, 25 Jun 2023 22:39:52 +0800</pubDate><guid>https://taction.top/2023/06/25/2023-06-25-http-wasm-middleware.md/</guid><description>本文从源码角度分析Dapr Http Wasm的实现原理，以及给出一些常见的使用场景案例。 Dapr runtime middleware dapr将会在初始化的时候调用一次GetHandler</description></item><item><title>Debug Dapr In K8s</title><link>https://taction.top/2023/03/17/2023-03-17-debug-dapr-k8s.md/</link><pubDate>Fri, 17 Mar 2023 20:06:01 +0800</pubDate><guid>https://taction.top/2023/03/17/2023-03-17-debug-dapr-k8s.md/</guid><description>准备工作 编译 拉代码构建二进制,这里面最主要的就是DEBUG=1dapr里只要加了这个，构建二进制的时候就会构建附带debugger信息的二进</description></item><item><title>Deploying Dapr Pluggable Component In K8s</title><link>https://taction.top/2023/03/16/2023-03-16-deploying-pluggable-k8s.md/</link><pubDate>Thu, 16 Mar 2023 18:12:04 +0800</pubDate><guid>https://taction.top/2023/03/16/2023-03-16-deploying-pluggable-k8s.md/</guid><description>本文以dapr Hello Kubernetes教程为基础，将其中state组件替换为pluggable state组件，通过这个过程来介绍pluggab</description></item><item><title>Dapr Pluggable component源码分析介绍</title><link>https://taction.top/2023/03/07/2023-03-07-pluggable-component.md/</link><pubDate>Tue, 07 Mar 2023 21:09:38 +0800</pubDate><guid>https://taction.top/2023/03/07/2023-03-07-pluggable-component.md/</guid><description>本文主要从dapr运行时、SDK和部署3部分的源码来介绍dapr的Pluggable component dapr运行时 Pluggable 组件自动发现机制 Dapr在实例化一个组</description></item><item><title>Spin up 源码分析</title><link>https://taction.top/2023/02/11/2023-02-11-spin-up-sourcecode.md/</link><pubDate>Sat, 11 Feb 2023 16:27:40 +0800</pubDate><guid>https://taction.top/2023/02/11/2023-02-11-spin-up-sourcecode.md/</guid><description>简介 通过之前文章，大概对fermyon平台架构有了了解。我们知道通过spin up [-f path/to/spin.toml]命令可以“启动”一个wa</description></item><item><title>Spin介绍</title><link>https://taction.top/2023/02/11/2023-02-11-spin-introduction.md/</link><pubDate>Sat, 11 Feb 2023 16:22:10 +0800</pubDate><guid>https://taction.top/2023/02/11/2023-02-11-spin-introduction.md/</guid><description>介绍 hippo是一个WebAssembly PaaS平台，用于创建基于WebAssembly的微服务和Web应用程序。它提供了一个基于浏览器的</description></item><item><title>运行docker wasm preview 失败教程</title><link>https://taction.top/2022/11/28/2022-11-28-dockerWasmPreview.md/</link><pubDate>Mon, 28 Nov 2022 19:02:27 +0800</pubDate><guid>https://taction.top/2022/11/28/2022-11-28-dockerWasmPreview.md/</guid><description>背景 docker宣布支持wasm，并且在wasm day上做了演讲。看到这个消息的时候初步跑了一下官方教程，成功的失败了，止步在contain</description></item><item><title>Dapr Wasmcloud Provider</title><link>https://taction.top/2022/11/22/2022-11-22-dapr-provider.md/</link><pubDate>Tue, 22 Nov 2022 19:45:05 +0800</pubDate><guid>https://taction.top/2022/11/22/2022-11-22-dapr-provider.md/</guid><description>Wasmcloud和Dapr基础介绍 Dapr是一个可移植的、事件驱动的运行时，它使任何开发人员都能轻松地构建在云和边缘运行的有弹性、无状态和</description></item><item><title>Actor to Actor call</title><link>https://taction.top/2022/11/06/2022-11-06-a2acall.md/</link><pubDate>Sun, 06 Nov 2022 15:55:34 +0800</pubDate><guid>https://taction.top/2022/11/06/2022-11-06-a2acall.md/</guid><description>概述 在wasmcloud actor 调用 actor的文档中，有介绍如何通过actor调用actor，但是在查看wasmcloudexamples和in</description></item><item><title>使用rebase对提交进行DCO签名</title><link>https://taction.top/2021/12/18/2021-12-18-dco-rebase.md/</link><pubDate>Sat, 18 Dec 2021 19:27:34 +0800</pubDate><guid>https://taction.top/2021/12/18/2021-12-18-dco-rebase.md/</guid><description>使用rebase对提交进行签名 背景 提交的一个开源项目增加了DCO要求，而且项目是通过merge来进行代码管理的。所以有些比较久的提交有比较多</description></item><item><title>Knative KPA</title><link>https://taction.top/2021/12/07/2021-12-07-knative-kpa-use.md/</link><pubDate>Tue, 07 Dec 2021 16:46:33 +0800</pubDate><guid>https://taction.top/2021/12/07/2021-12-07-knative-kpa-use.md/</guid><description>本文主要介绍kpa如何配置，以及以revision为角度介绍其中的各项配置的作用。 简介 有全局配置和每个revision的配置。如果revis</description></item><item><title>Knative自定义流程Demo</title><link>https://taction.top/2021/12/01/2021-12-01-knative-demo.md/</link><pubDate>Wed, 01 Dec 2021 15:50:12 +0800</pubDate><guid>https://taction.top/2021/12/01/2021-12-01-knative-demo.md/</guid><description>概述 经过前面的介绍，可以发现revision资源是整个流程的核心。那么在不对当前deployment部署托管的情况下。修改revision引</description></item><item><title>Knative Queue</title><link>https://taction.top/2021/12/01/2021-12-01-knative-queue.md/</link><pubDate>Wed, 01 Dec 2021 15:46:27 +0800</pubDate><guid>https://taction.top/2021/12/01/2021-12-01-knative-queue.md/</guid><description>简介 queue是knative在每个deployment都会为业务容器注入的&amp;quot;sidecar&amp;quot;，负责其入口流量代理行为。</description></item><item><title>Knative</title><link>https://taction.top/2021/12/01/2021-12-01-knative-scalefrom0.md/</link><pubDate>Wed, 01 Dec 2021 15:44:10 +0800</pubDate><guid>https://taction.top/2021/12/01/2021-12-01-knative-scalefrom0.md/</guid><description>本文主要从源码分析角度来看从0开始扩容和缩容到0的过程。主要核心点在于从0开始扩容，主要涉及activator和autoscaler组件。在</description></item><item><title>Knative CRD</title><link>https://taction.top/2021/12/01/2021-12-01-knative-crd.md/</link><pubDate>Wed, 01 Dec 2021 15:43:22 +0800</pubDate><guid>https://taction.top/2021/12/01/2021-12-01-knative-crd.md/</guid><description>TL；DR 本文主要介绍knative中的CRD，及以一个CRD为例介绍，只创建了ksvc其他所有的衍生CRD是如何被创建的。最后以一个实际运</description></item><item><title>一次关于sidecar的问题排查</title><link>https://taction.top/2021/11/20/2021-11-20-acpuquestion.md/</link><pubDate>Sat, 20 Nov 2021 15:58:16 +0800</pubDate><guid>https://taction.top/2021/11/20/2021-11-20-acpuquestion.md/</guid><description>问题描述 公司采用了自研的sidecar，是用go语言实现的，在部署的时候限制了sidecar的CPU占用为0.5核。且在sidecar中实现</description></item><item><title>Debug Knative</title><link>https://taction.top/2021/11/04/2021-11-04-debug-knative.md/</link><pubDate>Thu, 04 Nov 2021 15:36:50 +0800</pubDate><guid>https://taction.top/2021/11/04/2021-11-04-debug-knative.md/</guid><description>TL;DR 本文主要介绍在本机IED中如何远程调试位于k8s中的knative程序。 目标 由于knative组件运行在k8s中，当发生错误的时候，在对代</description></item><item><title>Knative Use</title><link>https://taction.top/2021/11/01/2021-11-01-knative-use.md/</link><pubDate>Mon, 01 Nov 2021 13:41:20 +0800</pubDate><guid>https://taction.top/2021/11/01/2021-11-01-knative-use.md/</guid><description>本文档主要介绍跟随官网入门教程和minikube案例运行knative的hello world。中间部分命令根据国内众所周知的网络特点做了一下</description></item><item><title>使用Docker工具在WasmEdge中管理WebAssembly应用程序</title><link>https://taction.top/2021/10/26/2021-10-26-manage-wasm-using-docker.md/</link><pubDate>Tue, 26 Oct 2021 16:19:30 +0800</pubDate><guid>https://taction.top/2021/10/26/2021-10-26-manage-wasm-using-docker.md/</guid><description>开发人员可以利用DockerHub和CRI-O等Docker工具部署、管理和运行轻量级WebAssembly应用，这些应用使用WasmEdg</description></item><item><title>基于WebAsssembly的Serverless探索1:wasm概述</title><link>https://taction.top/2021/10/17/2021-10-17-wasm1.md/</link><pubDate>Sun, 17 Oct 2021 16:16:20 +0800</pubDate><guid>https://taction.top/2021/10/17/2021-10-17-wasm1.md/</guid><description>一、介绍 1.1 什么是 WebAssembly 运行在沙盒中的二进制格式代码 WebAssembly 是一种低层次的二进制格式代码，体积小，因此加载和执行速度快。你不需要直接编写 WebAssembly 代码，而是可以</description></item><item><title>基于WebAsssembly的Serverless探索2：相关项目分析</title><link>https://taction.top/2021/10/16/2021-10-16-wasm2.md/</link><pubDate>Sat, 16 Oct 2021 12:59:01 +0800</pubDate><guid>https://taction.top/2021/10/16/2021-10-16-wasm2.md/</guid><description>背景 云原生正在成为新的基础设施 云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生向下封装资源</description></item><item><title/><link>https://taction.top/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taction.top/about/</guid><description>About Me Huabing Zhao is a software architect, an Istio Member and an ONAP PTL. He has a solid experience in the information and telecommunication technology industry for more than 17 years. Throughout his career, he has built a number of large-scale, cross-country software systems, most of them are still running in production. He loves open source and has been contributing to various open source projects, he is a member</description></item><item><title/><link>https://taction.top/notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taction.top/notes/</guid><description>Go 语言学习笔记 Envoy 学习笔记</description></item><item><title/><link>https://taction.top/search/placeholder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taction.top/search/placeholder/</guid><description/></item><item><title>Posts Archive</title><link>https://taction.top/archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://taction.top/archive/</guid><description/></item></channel></rss>