<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>webassembly on Taction Blog</title><link>https://taction.top/tags/webassembly/</link><description>Recent content in webassembly on Taction Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Sep 2023 20:06:20 +0800</lastBuildDate><atom:link href="https://taction.top/tags/webassembly/index.xml" rel="self" type="application/rss+xml"/><item><title>在K8s中调度Dapr Wasm程序</title><link>https://taction.top/post/run-dapr-wasm-in-k8s/</link><pubDate>Mon, 04 Sep 2023 20:06:20 +0800</pubDate><guid>https://taction.top/post/run-dapr-wasm-in-k8s/</guid><description>用go语言实现一个containerd-shim，支持在k8s中调度wasm程序。通过为shim添加dapr 组件的host abi支持，使被调</description></item><item><title>在K8s中运行Wasm container</title><link>https://taction.top/post/run-wasm-in-k8s/</link><pubDate>Sun, 03 Sep 2023 17:07:56 +0800</pubDate><guid>https://taction.top/post/run-wasm-in-k8s/</guid><description>先决条件 Intall k3d wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash kubectl curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl 启动k3d 在这个镜像中我内置添加了containerd-shim-dapr-v1二进制，</description></item><item><title>Wit in Go Practice</title><link>https://taction.top/post/wit-in-go-practice/</link><pubDate>Fri, 01 Sep 2023 20:11:19 +0800</pubDate><guid>https://taction.top/post/wit-in-go-practice/</guid><description>TL;DR 本文以实际案例介绍如何借助WebAssembly组件模型来自定义Wasm及开发对应的go语言SDK。 一 概述 Dapr是一个分布式运行时，那么</description></item><item><title>WebAssembly Component Model介绍及如何与go语言结合</title><link>https://taction.top/post/wit-in-go/</link><pubDate>Mon, 21 Aug 2023 20:05:23 +0800</pubDate><guid>https://taction.top/post/wit-in-go/</guid><description>TL;DR 本文介绍使用WebAssembly Component Model定义的ABI，如何实现其go语言的sdk，包括guest和host的sdk。 基本介绍 WebAssembly 组件模</description></item><item><title>运行docker wasm preview 失败教程</title><link>https://taction.top/2022/11/28/2022-11-28-dockerWasmPreview.md/</link><pubDate>Mon, 28 Nov 2022 19:02:27 +0800</pubDate><guid>https://taction.top/2022/11/28/2022-11-28-dockerWasmPreview.md/</guid><description>背景 docker宣布支持wasm，并且在wasm day上做了演讲。看到这个消息的时候初步跑了一下官方教程，成功的失败了，止步在contain</description></item><item><title>使用Docker工具在WasmEdge中管理WebAssembly应用程序</title><link>https://taction.top/2021/10/26/2021-10-26-manage-wasm-using-docker.md/</link><pubDate>Tue, 26 Oct 2021 16:19:30 +0800</pubDate><guid>https://taction.top/2021/10/26/2021-10-26-manage-wasm-using-docker.md/</guid><description>开发人员可以利用DockerHub和CRI-O等Docker工具部署、管理和运行轻量级WebAssembly应用，这些应用使用WasmEdg</description></item><item><title>基于WebAsssembly的Serverless探索1:wasm概述</title><link>https://taction.top/2021/10/17/2021-10-17-wasm1.md/</link><pubDate>Sun, 17 Oct 2021 16:16:20 +0800</pubDate><guid>https://taction.top/2021/10/17/2021-10-17-wasm1.md/</guid><description>一、介绍 1.1 什么是 WebAssembly 运行在沙盒中的二进制格式代码 WebAssembly 是一种低层次的二进制格式代码，体积小，因此加载和执行速度快。你不需要直接编写 WebAssembly 代码，而是可以</description></item><item><title>基于WebAsssembly的Serverless探索2：相关项目分析</title><link>https://taction.top/2021/10/16/2021-10-16-wasm2.md/</link><pubDate>Sat, 16 Oct 2021 12:59:01 +0800</pubDate><guid>https://taction.top/2021/10/16/2021-10-16-wasm2.md/</guid><description>背景 云原生正在成为新的基础设施 云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生向下封装资源</description></item></channel></rss>